<program> -> #Start() begin <stmt_list> end
<stmt_list> -> <statement> <stmt_tail>
<stmt_tail> -> <stmt_list>
<stmt_tail> -> lambda
<statement> -> <ident> := <expression> ; #Assign(0,2)
<statement> -> read ( <id_list> ) ;
<statement> -> write ( <expr_list> ) ;
<id_list> -> <ident> #Read_Id(0) <id_tail>
<id_tail> -> , <id_list>
<id_tail> -> lambda
<expr_list> -> <expression> #Write_Expr(0) <expr_tail>
<expr_tail> -> , <expr_list>
<expr_tail> -> lambda
<expression> -> <primary> #Copy(0,1) <primary_tail> #Copy(1,-1)
<primary_tail> -> <add_op> <expression> #Gen_Infix(0,1)
<primary_tail> -> lambda
<primary> -> ( <expression> ) #Copy(1,-1)
<primary> -> <ident> #Copy(0,-1)
<primary> -> IntLiteral #Process_Literal()
<add_op> -> + #Process_Op()
<add_op> -> - #Process_Op()
<ident> -> Id #Process_Id()
<system_goal> -> <program> $ #Finish()
